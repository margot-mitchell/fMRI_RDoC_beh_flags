name: Process Dropbox Data

on:
  workflow_dispatch: # Manual trigger
  schedule:
    - cron: '0 0 * * 1' # Run weekly on Mondays at midnight
  push: # Trigger on git pushes

jobs:
  process-data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install uv
        run: pip install uv

      - name: Create venv with uv
        run: uv venv

      - name: Install dependencies
        run: |
          source .venv/bin/activate
          python -m pip install -r requirements.txt
          pip install -e .

      - name: Setup Rclone
        uses: AnimMouse/setup-rclone@v1
        with:
          rclone_config: ${{ secrets.RCLONE_CONFIG }}

      - name: Verify Rclone Configuration
        run: |
          echo "Verifying rclone configuration..."
          rclone listremotes
          rclone lsd rdoc_dropbox:rdoc_fmri_behavior/output/ || echo "Error: Could not access Dropbox directory"

      - name: Create directory structure
        run: |
          mkdir -p preprocessed_data
          mkdir -p outputs
          mkdir -p raw_data

      - name: List Dropbox Contents
        run: |
          echo "Listing Dropbox contents..."
          rclone ls rdoc_dropbox:rdoc_fmri_behavior/output/raw/

      - name: Sync data from Dropbox
        run: |
          echo "Syncing data from Dropbox..."
          rclone copy rdoc_dropbox:rdoc_fmri_behavior/output/raw ./raw_data --verbose

      - name: List Downloaded Data
        run: |
          echo "Listing downloaded data..."
          ls -la ./raw_data/

      - name: Process each subject
        run: |
          # Activate virtual environment
          source .venv/bin/activate
          
          # Get list of subject folders
          for subject in ./raw_data/sub-*; do
            if [ -d "$subject" ]; then
              subject_name=$(basename "$subject")
              echo "Processing $subject_name..."
              
              # Run preprocessing
              echo "Running preprocessing for $subject_name..."
              python preprocess.py "$subject_name" || {
                echo "Error: Preprocessing failed for $subject_name"
                exit 1
              }
              
              # Run metrics calculation
              echo "Running metrics calculation for $subject_name..."
              python calculate_metrics.py "$subject_name" || {
                echo "Error: Metrics calculation failed for $subject_name"
                exit 1
              }
              
              # Generate flags
              echo "Generating flags for $subject_name..."
              python generate_flags.py "$subject_name" || {
                echo "Error: Flag generation failed for $subject_name"
                exit 1
              }
              
              echo "Successfully processed $subject_name"
            fi
          done

      - name: Upload processed data to Dropbox
        run: |
          # Activate virtual environment
          source .venv/bin/activate
          
          # Create a timestamp for the archive
          timestamp=$(date +%Y%m%d_%H%M%S)
          
          echo "Creating output directories in Dropbox..."
          rclone mkdir rdoc_dropbox:rdoc_fmri_behavior/output/preprocessed_data || echo "Warning: Could not create preprocessed_data directory"
          rclone mkdir rdoc_dropbox:rdoc_fmri_behavior/output/analysis_outputs || echo "Warning: Could not create analysis_outputs directory"
          rclone mkdir rdoc_dropbox:rdoc_fmri_behavior/output/archive/raw_${timestamp} || echo "Warning: Could not create archive directory"
          
          echo "Uploading preprocessed data..."
          rclone copy ./preprocessed_data rdoc_dropbox:rdoc_fmri_behavior/output/preprocessed_data --verbose || {
            echo "Error: Failed to upload preprocessed data"
            exit 1
          }
          
          echo "Uploading analysis outputs..."
          rclone copy ./outputs rdoc_dropbox:rdoc_fmri_behavior/output/analysis_outputs --verbose || {
            echo "Error: Failed to upload analysis outputs"
            exit 1
          }
          
          echo "Archiving raw data..."
          rclone copy ./raw_data rdoc_dropbox:rdoc_fmri_behavior/output/archive/raw_${timestamp} --verbose || {
            echo "Error: Failed to archive raw data"
            exit 1
          }

      - name: Clean up
        if: always()
        run: |
          rm -rf ./raw_data
          echo "Temporary data cleaned up" 